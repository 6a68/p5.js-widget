{"version":3,"sources":["webpack:///p5-widget.js","webpack:///webpack/bootstrap 8fb5bd398f7deb0eafc3","webpack:///./lib/p5-widget.ts","webpack:///./lib/defaults.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","getMyBaseURL","url","baseURL","slice","MY_FILENAME","length","AVOID_MIXED_CONTENT_WARNINGS","window","location","protocol","test","replace","getMyScriptEl","document","currentScript","querySelectorAll","isElementInViewport","el","rect","getBoundingClientRect","bottom","right","top","innerHeight","documentElement","clientHeight","left","innerWidth","clientWidth","getDataHeight","height","parseInt","getAttribute","isNaN","defaults","HEIGHT","replaceScriptWithWidget","iframe","createElement","previewWidth","baseSketchURL","p5version","autoplay","hasAttribute","qsArgs","encodeURIComponent","textContent","style","IFRAME_STYLE","push","myBaseURL","IFRAME_FILENAME","join","setAttribute","parentNode","replaceChild","whenVisible","cb","maybeMakeVisible","clearInterval","interval","removeEventListener","setInterval","addEventListener","lazilyReplaceScriptWithWidget","display","fontSize","width","minHeight","background","nextId","toString","lazilyReplaceAllScriptsWithWidget","scripts","forEach","myScriptEl","src","autoload","readyState","replaceScript","replaceAll","P5_VERSION","PREVIEW_WIDTH"],"mappings":"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","file":"p5-widget.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar defaults = __webpack_require__(1);\n\tvar MY_FILENAME = 'p5-widget.js';\n\tvar IFRAME_FILENAME = 'p5-widget.html';\n\tvar IFRAME_STYLE = [\n\t    'width: 100%',\n\t    'border: 1px solid #ec245e',\n\t    'box-sizing: border-box'\n\t];\n\tvar AVOID_MIXED_CONTENT_WARNINGS = true;\n\tvar myScriptEl = getMyScriptEl();\n\tvar myBaseURL = getMyBaseURL(myScriptEl.src);\n\tvar autoload = !myScriptEl.hasAttribute('data-manual');\n\tvar nextId = 1;\n\tfunction getMyBaseURL(url) {\n\t    var baseURL = url.slice(0, -MY_FILENAME.length);\n\t    if (AVOID_MIXED_CONTENT_WARNINGS) {\n\t        if (window.location.protocol === 'http:' && /^https:/.test(baseURL)) {\n\t            // Our script was loaded over HTTPS, but the embedding page is\n\t            // using HTTP. This is likely to result in mixed content warnings\n\t            // if e.g. the widget's sketch wants to load resources relative to\n\t            // the embedding page's URL, so let's just embed the widget over\n\t            // HTTP instead of HTTPS.\n\t            baseURL = baseURL.replace('https:', 'http:');\n\t        }\n\t    }\n\t    return baseURL;\n\t}\n\tfunction getMyScriptEl() {\n\t    return (document.currentScript ||\n\t        document.querySelectorAll(\"script[src$='\" + MY_FILENAME + \"']\")[0]);\n\t}\n\t// http://stackoverflow.com/a/7557433/2422398\n\tfunction isElementInViewport(el) {\n\t    var rect = el.getBoundingClientRect();\n\t    return (rect.bottom >= 0 &&\n\t        rect.right >= 0 &&\n\t        rect.top <= (window.innerHeight ||\n\t            document.documentElement.clientHeight) &&\n\t        rect.left <= (window.innerWidth ||\n\t            document.documentElement.clientWidth));\n\t}\n\tfunction getDataHeight(el) {\n\t    var height = parseInt(el.getAttribute('data-height'));\n\t    if (isNaN(height))\n\t        height = defaults.HEIGHT;\n\t    return height;\n\t}\n\tfunction replaceScriptWithWidget(el) {\n\t    var iframe = document.createElement('iframe');\n\t    var height = getDataHeight(el);\n\t    var previewWidth = parseInt(el.getAttribute('data-preview-width'));\n\t    var baseSketchURL = el.getAttribute('data-base-url');\n\t    var p5version = el.getAttribute('data-p5-version');\n\t    var autoplay = el.hasAttribute('data-autoplay');\n\t    var url;\n\t    var qsArgs = [\n\t        'sketch=' + encodeURIComponent(el.textContent),\n\t        'id=' + encodeURIComponent(el.getAttribute('data-id'))\n\t    ];\n\t    var style = IFRAME_STYLE.slice();\n\t    if (!isNaN(previewWidth) && previewWidth >= 0) {\n\t        qsArgs.push('previewWidth=' + previewWidth);\n\t    }\n\t    if (baseSketchURL) {\n\t        qsArgs.push('baseSketchURL=' + encodeURIComponent(baseSketchURL));\n\t    }\n\t    if (p5version) {\n\t        qsArgs.push('p5version=' + encodeURIComponent(p5version));\n\t    }\n\t    if (autoplay) {\n\t        qsArgs.push('autoplay=on');\n\t    }\n\t    style.push('min-height: ' + height + 'px');\n\t    url = myBaseURL + IFRAME_FILENAME + '?' + qsArgs.join('&');\n\t    iframe.setAttribute('src', url);\n\t    iframe.setAttribute('style', style.join('; '));\n\t    el.parentNode.replaceChild(iframe, el);\n\t}\n\tfunction whenVisible(el, cb) {\n\t    var CHECK_INTERVAL_MS = 1000;\n\t    var interval;\n\t    function maybeMakeVisible() {\n\t        if (!isElementInViewport(el))\n\t            return;\n\t        clearInterval(interval);\n\t        window.removeEventListener('scroll', maybeMakeVisible, false);\n\t        window.removeEventListener('resize', maybeMakeVisible, false);\n\t        cb(el);\n\t    }\n\t    // We want to check at a fixed interval as a fallback, to make\n\t    // sure that we detect when the element is visible even outside\n\t    // of the usual means (e.g., because the user did some\n\t    // sort of pinch/zoom gesture).\n\t    interval = setInterval(maybeMakeVisible, 1000);\n\t    window.addEventListener('scroll', maybeMakeVisible, false);\n\t    window.addEventListener('resize', maybeMakeVisible, false);\n\t    maybeMakeVisible();\n\t}\n\tfunction lazilyReplaceScriptWithWidget(el) {\n\t    var height = getDataHeight(el);\n\t    el.style.display = 'block';\n\t    el.style.fontSize = '0';\n\t    el.style.width = '100%';\n\t    el.style.minHeight = height + 'px';\n\t    el.style.background = '#f0f0f0';\n\t    if (!el.hasAttribute('data-id')) {\n\t        el.setAttribute('data-id', nextId.toString());\n\t        nextId++;\n\t    }\n\t    whenVisible(el, replaceScriptWithWidget);\n\t}\n\tfunction lazilyReplaceAllScriptsWithWidget() {\n\t    var scripts = document.querySelectorAll(\"script[type='text/p5']\");\n\t    [].slice.call(scripts).forEach(function (el) {\n\t        lazilyReplaceScriptWithWidget(el);\n\t    });\n\t}\n\tif (autoload) {\n\t    if (document.readyState === 'complete') {\n\t        lazilyReplaceAllScriptsWithWidget();\n\t    }\n\t    else {\n\t        window.addEventListener('load', lazilyReplaceAllScriptsWithWidget, false);\n\t    }\n\t}\n\twindow['p5Widget'] = {\n\t    baseURL: myBaseURL,\n\t    url: myBaseURL + MY_FILENAME,\n\t    replaceScript: lazilyReplaceScriptWithWidget,\n\t    replaceAll: lazilyReplaceAllScriptsWithWidget,\n\t    defaults: defaults\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.P5_VERSION = '0.4.23';\n\texports.PREVIEW_WIDTH = 150;\n\texports.HEIGHT = 300;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** p5-widget.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8fb5bd398f7deb0eafc3\n **/","import * as defaults from \"./defaults\";\n\nconst MY_FILENAME = 'p5-widget.js';\nconst IFRAME_FILENAME = 'p5-widget.html';\nconst IFRAME_STYLE = [\n  'width: 100%',\n  'border: 1px solid #ec245e',\n  'box-sizing: border-box'\n];\nconst AVOID_MIXED_CONTENT_WARNINGS = true;\n\nlet myScriptEl = getMyScriptEl() as HTMLScriptElement;\nlet myBaseURL = getMyBaseURL(myScriptEl.src);\nlet autoload = !myScriptEl.hasAttribute('data-manual');\nlet nextId = 1;\n\nfunction getMyBaseURL(url: string) {\n  let baseURL = url.slice(0, -MY_FILENAME.length);\n\n  if (AVOID_MIXED_CONTENT_WARNINGS) {\n    if (window.location.protocol === 'http:' && /^https:/.test(baseURL)) {\n      // Our script was loaded over HTTPS, but the embedding page is\n      // using HTTP. This is likely to result in mixed content warnings\n      // if e.g. the widget's sketch wants to load resources relative to\n      // the embedding page's URL, so let's just embed the widget over\n      // HTTP instead of HTTPS.\n\n      baseURL = baseURL.replace('https:', 'http:');\n    }\n  }\n\n  return baseURL;\n}\n\nfunction getMyScriptEl() {\n  return (\n    document.currentScript ||\n    document.querySelectorAll(\"script[src$='\" + MY_FILENAME + \"']\")[0]\n  );\n}\n\n// http://stackoverflow.com/a/7557433/2422398\nfunction isElementInViewport(el: HTMLElement) {\n  var rect = el.getBoundingClientRect();\n\n  return (\n    rect.bottom >= 0 &&\n    rect.right >= 0 &&\n    rect.top <= (window.innerHeight ||\n                 document.documentElement.clientHeight) &&\n    rect.left <= (window.innerWidth ||\n                  document.documentElement.clientWidth)\n  );\n}\n\nfunction getDataHeight(el: HTMLScriptElement) {\n  let height = parseInt(el.getAttribute('data-height'));\n\n  if (isNaN(height)) height = defaults.HEIGHT;\n\n  return height;\n}\n\nfunction replaceScriptWithWidget(el: HTMLScriptElement) {\n  let iframe = document.createElement('iframe');\n  let height = getDataHeight(el);\n  let previewWidth = parseInt(el.getAttribute('data-preview-width'));\n  let baseSketchURL = el.getAttribute('data-base-url');\n  let p5version = el.getAttribute('data-p5-version');\n  let autoplay = el.hasAttribute('data-autoplay');\n  let url;\n  let qsArgs = [\n    'sketch=' + encodeURIComponent(el.textContent),\n    'id=' + encodeURIComponent(el.getAttribute('data-id'))\n  ];\n  let style = IFRAME_STYLE.slice();\n\n  if (!isNaN(previewWidth) && previewWidth >= 0) {\n    qsArgs.push('previewWidth=' + previewWidth);\n  }\n\n  if (baseSketchURL) {\n    qsArgs.push('baseSketchURL=' + encodeURIComponent(baseSketchURL));\n  }\n\n  if (p5version) {\n    qsArgs.push('p5version=' + encodeURIComponent(p5version));\n  }\n\n  if (autoplay) {\n    qsArgs.push('autoplay=on');\n  }\n\n  style.push('min-height: ' + height + 'px');\n  url = myBaseURL + IFRAME_FILENAME + '?' + qsArgs.join('&');\n  iframe.setAttribute('src', url);\n  iframe.setAttribute('style', style.join('; '));\n\n  el.parentNode.replaceChild(iframe, el);\n}\n\nfunction whenVisible(el: HTMLScriptElement,\n                     cb: (el: HTMLScriptElement) => void) {\n  let CHECK_INTERVAL_MS = 1000;\n  let interval: number;\n\n  function maybeMakeVisible() {\n    if (!isElementInViewport(el)) return;\n\n    clearInterval(interval);\n    window.removeEventListener('scroll', maybeMakeVisible, false);\n    window.removeEventListener('resize', maybeMakeVisible, false);\n    cb(el);\n  }\n\n  // We want to check at a fixed interval as a fallback, to make\n  // sure that we detect when the element is visible even outside\n  // of the usual means (e.g., because the user did some\n  // sort of pinch/zoom gesture).\n  interval = setInterval(maybeMakeVisible, 1000);\n\n  window.addEventListener('scroll', maybeMakeVisible, false);\n  window.addEventListener('resize', maybeMakeVisible, false);\n  maybeMakeVisible();\n}\n\nfunction lazilyReplaceScriptWithWidget(el: HTMLScriptElement) {\n  let height = getDataHeight(el);\n\n  el.style.display = 'block';\n  el.style.fontSize = '0';\n  el.style.width = '100%';\n  el.style.minHeight = height + 'px';\n  el.style.background = '#f0f0f0';\n\n  if (!el.hasAttribute('data-id')) {\n    el.setAttribute('data-id', nextId.toString());\n    nextId++;\n  }\n\n  whenVisible(el, replaceScriptWithWidget);\n}\n\nfunction lazilyReplaceAllScriptsWithWidget() {\n  let scripts = document.querySelectorAll(\"script[type='text/p5']\");\n\n  [].slice.call(scripts).forEach((el: HTMLScriptElement) => {\n    lazilyReplaceScriptWithWidget(el);\n  });\n}\n\nif (autoload) {\n  if (document.readyState === 'complete') {\n    lazilyReplaceAllScriptsWithWidget();\n  } else {\n    window.addEventListener(\n      'load',\n      lazilyReplaceAllScriptsWithWidget,\n      false\n    );\n  }\n}\n\nwindow['p5Widget'] = {\n  baseURL: myBaseURL,\n  url: myBaseURL + MY_FILENAME,\n  replaceScript: lazilyReplaceScriptWithWidget,\n  replaceAll: lazilyReplaceAllScriptsWithWidget,\n  defaults: defaults\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/p5-widget.ts\n **/","export const P5_VERSION = '0.4.23';\nexport const PREVIEW_WIDTH = 150;\nexport const HEIGHT = 300;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/defaults.ts\n **/"],"sourceRoot":""}